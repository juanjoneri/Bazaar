(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    137538,       2517]
NotebookOptionsPosition[    136480,       2477]
NotebookOutlinePosition[    136821,       2492]
CellTagsIndexPosition[    136778,       2489]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Projectiles and Charged Particles", "Title",
 CellChangeTimes->{{3.6820925905182376`*^9, 3.682092595649841*^9}, {
   3.7020319711057587`*^9, 3.7020319815118227`*^9}, 3.702032375273441*^9}],

Cell["Juan Jose Neri", "Subtitle",
 CellChangeTimes->{{3.6820926374445724`*^9, 3.682092641724166*^9}}],

Cell[CellGroupData[{

Cell["", "Section"],

Cell[CellGroupData[{

Cell["Problem 2.43", "Subsection",
 CellChangeTimes->{{3.7005694429318295`*^9, 3.7005694456892643`*^9}, {
  3.702032035699089*^9, 3.702032037691805*^9}, {3.7020323847133026`*^9, 
  3.702032387037797*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvT3PdkWzJYZsBw6JyJBwTEJoMhw6QzMiZ0Y+HllIx4ixNJqMX4BIyImJ
+AlkpCTkSGRE/AN86jlazyyK+ure+/peS+9+H+5r7927urq6qrq6uvt/+8//
73/4v/+nd95557/+r//2f//hP/23/+Orr/7Tf/+P7/7bH5/963/9f/7Lv/7L
//V//uv/9y//5V+++t//8//8bz/+9G/Xf/xf3nnn3/73zl+CIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAjCTfH777//9dVXX73595r46aef/vrmm2+u+s0KVv8ffvjh5jRcux0E
4RXx888/v9R3Hw3Qx3aJZ3/HNeyE8f1s+2zteE8238N4avR99tlnb69O9iCn
5kPZu68gq19//fUb3uzIoPHK3j0KK+eLL744XI4v02j7448/tt89o1/a902e
7gnoG7eSb/u+8ffe+CI8PtBn2efo+jFsGdsK9lXQX4Trwnj+zjvv/OOqYDol
emdymS20b3788cdvf7tWHMFk7v3333/zzTNs6pn0dDy/BGAj7LokT9hPtPra
xbDYlt2DTFxDHowm+x7z/7vvvvvHM+CPyTzrrkiHXQvQu5988slSm7EO9m1w
7zDaIad2Wdsd8W28DjJ+rNgfe3aHh5C3a/llGGvhu0IN45XJBcvaPdiKWwJj
tWvYTuvnZ/kFXmfcazuaPjfewp6AZvst86szH8xkd2c8/ihAPVf0J+v5M3Tg
Dg0djvSts+SbfaFbz+0Z2Ce8JU2sQx41Xmk6AWP1S/AR+qjyoVi3sQ/3qnO4
rMPhc1QxdOMf+gPsBS78/uGHH8rXuwOYTE/sDfqDtR/3T9Z7Jid8D3JjsRQD
x3CupSPZt7oHv8rz7Nqw9rb4waV9TT+e83W9ts00OeCxs30vawOv/8EnjkHt
jMWPYGd8ENXjUeDp5qsab2QwHcTtyHJZ+cfIozsS/2TbeQ0g5vNobX4LQA9A
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
gXEY92mMCTJgLM5y5ue5fKwx8mNZV0VxXD9W8fXyughxFx9XZLvn5zQyXQPY
PcTtopgCj695vrACz48yXTyP6O18lNtc8cPsNMrwsXfPW6xrxz7HPB7B39Bb
HKfp9Bd8Xs/blXPomdfct3nNfLQnKtqEx9LMS8CfUx6daYJ3+T22HZBtlmfm
k11WbmQLou9M/W74INFYudrbfRLbXoF9a0Kz1+28Bx63D/QF+MP9tBvDVOdb
c5tFMQzYDC4r8nMZFV1e//Je5hyP63jGeoJpgM7gvox+7N9j+rwcRmMFjg0w
kCdU2ZRoLIh2iezmig/W5biC595v8HqCZSGqQ0WTPW/9rspT8u+BLv+793WQ
c8M6yeu3Tk90vg7s8DXh+8LqPsomo5DT1ViKfcvvsTKRNXvPvmUX/hvvG+9x
zz/Dl/kO/E38Dltv75htsMv8cPvtgw8+ePsN3MN1NBca7ZCtD+OY/9FYCuIK
3qb++eefb9vD/vU5tEzDt99+m96zcvldfM/XjffG9fNtxk/4VfYvlxfFmv09
r4dYRqK2su9H8gp++D6NHKV33333bZ+BnEU4Ytd3YylRzlU0/2B0Z2V/+eWX
Y3sYtZWBec9tlrVVFgfJYplG/ySWYnIYzesCrMt8+ZF+7ObRWX69XuXYHvcl
6CU/Vqn0Q+U3ch/rZIf7f/Qs1/eXX35J762Adb8Hnyvt9RHoND6ZfNk94x3H
QvGM75N2H/3Al8v1YD3mbVXmR0T1sPfse5k+9X2L5c3rUuaJvcdyxe8dsUeQ
p90zFYxmH4ea5H8yD3f8kMjnQJk+Bmk8nazF7vzNzub5fsz9EbJr/Q7jUAPa
MdKl9iz0Ctc101FMS6TD8d5vv/32t9/xDa8vue9MZAy6P/MFPT9Mr9hv7FNV
frXvy1nZn3/+eVhvlMt8Nh5Pdeann34a1g/9dOLPc/257ZgOXw5yCTzYrng5
YFn1QHv7+hrfsnpwToyXBbRJ1h+n+yBYOeZjRfB6MqJt1+eKaP7xxx9Hz1f5
DEyX79vT2IOB/fTsnpd53Ivav7L7mQwaWGdHdnalDaq56opvmazxe5XflPXR
6n5W50xvTPWJofPZzJayPTXdHdk4A+uDKa3QXeb7R+B+j7aAno/sPI8NMv/Z
6yrcszF3hEruoBcucSZUBT/vtwLE/oGVWEo25zexP9majeiKclSri9ciTN85
43wJnneJwN87EkvhmHYEjmVm6xqiWGBlu1guPKo6cX+J5kN2YykevD4I8Ww/
1+tpXPUJMjswwW4spbJJLGfcrlx3xKZRXjVX3Mkv9yWUgxymLCbt26qaL+zK
QFt2+6tg/g35iX6emfsEf2Nnv5QovwpzMNlYfTWWwnR0sjPJR0B/8DbzjFgK
yx3r42qvisxmdWsmWQ9GbZq1WbZnVZaXgvJQB9NDmAus5mV22/OojQBfds/0
49yDLl/ZY1eGDJnfyzIdzbF1mOjSXZvX6YVOtr3ccI4Go8r3wfqaFRqrMY/H
RKd0Mtvla1fz6vg9ivtM+lEns1h/MrVhESa85ns8/+3tNesUTzt+92PpKs8B
Y7Go/aYxg4gvE79p8mz2nTNjKeDzFJVtquhaobnyPaAffBwX7RzhjFhKhMo/
8pjEUqqxxzVjKUaj8Zn9+SoHeNUuY04tylv2ehx9NPLf/drrCU14J4uVR+My
8Gplf47KLk30Z2bvMpt2aWRrrzpEeUYrsRSLGVUxkcn+k9HaPFyRfYvW//EV
+VbVO9keEDu4ViyF199kiNbJGHZsp2E3lsL3o7H/bizFy3kVS8jWK+zGUnbm
iy8RS+F7LP+oa3RV6OS38ncBv37Kt6Ff51r5ufw9yHOl37hfcAzFX9zfuzp1
tnpy1gDiTdW6tqqcCd8B2O9KN4BPfu7s7FiKlVfp1m4859eFV9/mZ1ZigtEa
rExnRhfGPpEdqXhZtedRG9GtfVmF30uqwiViKX6dwuq8x6R/79q8TH9N9GTk
s2R6gH/338zWYEV9w9d7ImPd3A1/KyqvGucDVS57ZXcn/WhlDA16/Tq9DhNe
8z1ebwl9aXPJsF2w15lO8fPXFY+rWNilYynQtdWz0RxN9f1V+Pni6Ts7OmN1
/3LIWNSnM55kOufSsZSJrpjwbXXscalYCiPyW4/GUjjnitswOguX99uq/PdM
HzBN3Rox/y54AxpWMImlVH0/m1NYWVd8Frr1/hnAb0/v7n4pkb85fTfKHely
5KIYTOdj+eeP6miPrt9W/XQFkzFGNy64ZiwlovdoLOWonjPcayyl2x8jakM8
f2TPym4M2vlrGMP59btVvBo+Xranre+vlU8EvqyMtbo4RafLKj+E9x3C3l+Z
vHU+2FR2snUSE5rPiKWsoJr743JX9dxuTDDTO7t7oO2259SeRUDM7uy91Sfj
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
cmz37He7uu/Z/cz3xlkZZn9tbsee+e2335bo/vbbb9+8j8to8vSYvDKv+Nkp
UAbKrnxF5AdGl3034hfKBx+MNx999NESjVau0WOyYO9ZWVamfTMal7Euse9h
vQvb5IhW/o59w75l/43vMnh/V9SffSiUFfEG697QXlYOeDSRcdTftzvvx4xY
CmSdn6/GAvY81lXweUAZzyJwLOWXX375m34Hvdl4Gu0FOQYN9q9/x75jz6Cu
dp/rijb58ccf3z5nvGNwH+L+xu0T+dHGi88///wtrZATe8/70vYs6gKaIAP8
ba6f6QtuM8i7fw50oGzQkPEXsZSz5i1QnvXpDNyvUAfW7VVsxfgwsRseLHOT
sU0VSzH6v/zyy7/JhNES0Y22Rr9GHVdjNF5HWDmffvppaAPQZ8Ef/A1++33a
jR9Gj/UFyFNEs6+f/Q27ZP/NMuz1A/YBN7nwtGR1sPrBznG/Bj38nskF6mD3
QY/fZxY042zLCKzzwINI33k7kukGlMfPsQ8yAervdVEky9Cx3L8yXYT243rw
e5CFqJ6QI68b8Tv2N2K6/b4DkDnfFtD7aCfoU9PdDJZbrAmBPfzggw/+Vl/I
J+qHuk7PLUBeDvPJvhP1C7ZZpo8hQytxFehJlAM+RL4VeAm/AX4RZN9kIkIU
S4n8SP891vPel/Ht1tl4BmTGyxrTh/v4PeqHEVAv091M24ovE9WR/bqofaH7
7NsYSxgNsOHMf7Rj5JdB1nHP+y4GK9/kHvYo2w/N+8Hcd9k/qdaGQz5Rr84X
Z5sCf8N+e/fdd1O/metutKDtoNMiHmRg+4Q+Yv9t/ZNh30f5kb9lOrMCZBjv
ox28/8b22X8r00mQPdhG1IHL8zzL9PakjWFD8R771L6tPN8gA/a3yWTXP4/C
6I/OpoHs81mz0fmyj4zJPKE/g4Evi6dO41ycP2GXxc2is2ewJx3usfxXczL2
fLS+E3uOIBZo9NrfKzrAyjZ5RBmch8D1R+wQ9CLWO43holwuczLvhri053G2
/zfOyoBcr8xLm/6O5r15b2L/TaYJ+7J4en3b8n4xvrxsDo9piGQa97m8bMy2
msfK7R6B/RPec5XjHD5fCPlgTC/L3jRWz9/g73BZUd/K1nPwe+APYvqcn4O1
MD42j7hnxF/0Tw/mb3TGt73jbUQmD/Y7+0TGR54b4jpkshzxHnSYrmBUZ4KD
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
PLcx6Mp8ztFYyiQ2ESHq+5PzDrHvDz9f8cPvgZjRy/ulVfIafW9HF6GeR9bF
Z2V3dqwah09kgevJ+0lmeqrybfz5rSy7nMOzaus9KluzGkvh8rpciGnbVusv
+ZkontP5YiwPZ8RSJnEcownfzfIwozF3p6uhk5nvkxz4Tt6nsZSur187lrJ7
rlWFaV5Kpmcyudw5x2fSL7A/l4HbLaPPnuF71Rx7Z3Nxf2UewYP9mTPORajq
f4lYyhl5KZlvWeUDXWKPsen6FIP5WuYXZefv2f3JOUxYz9rlPtmVzcEbOr3u
gf64evajp8njzz//fLsvaeY3Yq7E3z8zluLPCAIq2Yrkked1rEyrn4fJzSrN
KDM6xxbf5Dowz3/88ce/PV/JEGIpne+zGkv58ssv//E7/MHVMX3FC9Do76Fe
n3766T/eYf5xn7F3oj6Edud701gK+hv39ap/GN86H8L6j+/HVTuhv+3EUlDP
yT4OVj70ndcfxrtMF9qziL9UOqwD5nmM1ukenqAz0weT73kdWcWLV2MpBrRf
53OtnvXa6ULYu+o8TQ/oms8//zwsEzzLcpJ32r+zgVXfiOrC432To8hOW/1W
dWJFYxdLYXoY0zMbuO+zHxPpPKsv15tpt/b1/Pj222+XbDXumVxHvIU8eBla
tf/cjhnf7VvGw1W5A98rfwp9IepfkzbjerLflNUfNi+jKdsPnvm0owcj2s+K
pbBO9H0RcrriW3mZMDrR9r/99tubvzNZ9v6CIfMlmBe7sRSm1doOeUS4Z7Ty
d+1+5ddym/C3I78Kfojvn5CxqL5VLC/jRdbuXHcvS/ZdyHLF97NiKejr9q/R
b9cRPwWAHmZ5m54nwPf5faPL9OZEv3C5PI7x/cJgz37wwQd/o4/PkTWeoW3t
PbMJ1ka+DE+X3TfdZuVW+i2yfTvjE7Z9kdyvoCqniqV0e1ROvokxnvEPPJ7Y
XK8fuA3NN0Mb2r9GezTWOAMrcTDkUGaIYun2vNdd3bwkYn3dHAnKmM69Qn/s
rBnv+MT3qzj6Sn7FFBE/jR78d6ZP+fs+TsfxVuxVgjkCi+PurEdDef5d5G36
fYy5XrC7ft8PyCTzPNp7DujaKYO958+CN2Ct/+4aH09Hl2MU7bmL/JhoT1nj
hf8d3/D84Zxr3899/Jv9Pex5kL1repH3HAct0b4cnsaITqZldawNRGsLAKMJ
fMvyeiGvmT5kGT2ydpNzHqYy1p33WoH7vdXRvs95wPx7lDPlkcVSuG8bf6DD
fQ435+1PUPkikJtoTqKaX8rWPfH3qpxkyK/xaWqruB4o237D+1nfwHeiuvh1
ibDX+H21L/k5IMgK5KKLpbDOwLw5tz1kODuL1Pt0/l3EMvEd7x/65yGLsDe+
vzH/rO6whb4831f5nHEvx9M89IiOLu9yVe9425jVP9JF3X5SGU1VnmhmpxiQ
9aiuO2c1ReA4GWSU+3RW70oX+b3L4LPs+oL8LX9N8iDYJkNWs/Omo77ny6zs
T0Wr8SHyVZhGg/Hfx/t9udC3WOdVyQL3XTxTnesS6Wfwj3ng3/XnKrJ+4svu
2bjJn+nufTnev8/ziGn07eltQXTZM6vxFf4mxglRX4l0oYF5AZ8WdeNyoz2n
Kx2SXVWuub8im+BtIMYnqJtvH34v4sGk/0TozoiagHV4pU997IJ5sDMWYpsL
XxPlcluwfvXny/G9qg136FsBvlvllLDeja4ovyiLG/nyInomdc76TwaMFXfW
k01zE6N+kI1tkGvUlTsB4p/QP9Crfr8ujEvsXmR7srWAXsfugOvL53+jzKi9
Pf2wJd5O2N92ebuEcZq3cbim4wcr28YETHcWv5iA9a+3H508mz328aSsTax+
+AavVfbfYJuF532Z3H7gG++3zlc2xvPt4+0/ngOdoAV6wo8VduUR8hPZq+q8
7UneqH/uiI1DfVft6m4OY2SHwAcvc9Av/LvJhf3ufcCorTn/wD/Hbbwa8/S+
GPZLYP0BmC70dUBcwPOFY7SI31byl/FxikiXGR3ROefgudeX0RjkTJ3uaUSM
LdPDDO7LuDBGY9759vfPMiIdX+lUzy/QGvn57GtyH2D4WGRm3zJbNfFlIOOR
v8A83d23mWOniJmz3Y7G2Jk9yurpY00cU2J71fEDbVLlZx2F14moWzQGhqxy
H83k2MqJ5oV2AVsc9acMrPt4bbRvY/Yd7DJ/k8dbaAe0H+qDmEBEq4+ZR2N3
POf9JPvbl+vnX7rnM5rY/md7w3l/B22LdTPRPeY5r0kEvxE39j54dCFGFN3z
fPP3ALRlZA92bZaB1wmj7rDBUT0Y7Dcwb0BvZkvY/nhE8zOR3+nr4Pt8Flfy
8aMozhz1df8M9x++JuOLzOeeAmMK/i7qktGGukftujImQvuYTkF7Z/LLe9t0
sgSZQ4zmaEx9gmnMtruy+aPMnrF/i7EwdFm191SUmzCZ88Nc8wq8n8BX5st4
fkXtHOncSO9OwWsKUEYm52ZTQCf0N/gf6QGMx/368V0gFmL9dyrfEW04K+0W
OPrdSvcL10E0vwGclQMI/XHk/RWdtRN7yb7r+xx8Ar/fn7+qe9leO9gLJsqr
W4HfDwV6NtNd5h9FdGb9knVqNHfvYd89ojdB/xGee0D/Vm2yguw7+M36UvWd
TNayd7pxItdvynfYko4XKLsrF+VlZVb16wD/p/p2NjfRgetl/w3bX/lXkc+w
++3VdvM0r9xbxSXywg3GqzPWVxylYbI+/55R5QEJf8fEL7Fnjq6PuxZevd2z
8ahwfVi/iuboETPKLp6j84DfWa3h8vGnLk/A+0nwhZF7UH3H5O2S+T2CMEU2
VyVcD5hvvGQbHImPYi/QFZ0VrUt6NVTxe+Hxgfa91Nj23rGaqyUIrwDFUmbA
+tPJ2Ht3DfW18crt3sXWhevCZDBaD/Ys0BhDuCcolnIfQDzlEjYYOXa7MD9m
Za7h6PeeAbzGQXhOvHIsRXNCghBDsZQZkDff6RDMhT8C0O6vphcv6b8K+4jW
1D0DMMa4dR6lIACy+feDS9gj5NmvAOtBeA3cFPbs7t49zwSMNY/s9yvcD7DH
K8v1K8XKsMYLe79Xe2MJwiuDYymvbgcr8H420do94yP297jHMRPv5WHAut5X
0Iu8pz3GtfJ17g84b+OZxneQN+lW4V7Q7ZctXB9Yy3hL7O75dg+03wvYnxYe
H35PP7TvM/koFfwebfJlBCEG7/v8CuPqXfC5itXel/eqZ3gfbOTOvMo8kt+v
X/bgfoE91Z/BN9+ZGxaESyI7R2MlB0F4TmAO+lXGiWfD7xOufSUeHxwbY//5
VcD72L/KeEEQVoH5B3+9kq5YBfJP/N6X9w6/h+er2XhuM9mD+8cj9ClBEARB
MKycxyMIjwL5y4IgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCP+O
33///a9ff/311mS8FH744Yc3F/83rp9//nlczjfffHMpEgXh6bHS14TrQG0i
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
WxLl+K7wqMrNPxu7sZTu/r3EUiJ9HMmM1wvQV2fHxpHvEvlx1XqACpFvcq+x
FOY999PMD6n8LiDq25eKpUz4U81PZTgjlpLlYvj3ujpcK5Yy4VMXe2O5iPY2
5G9F86Ar9arAtqPa0+3e8lK68egOpvKVjWPAP5wLkT2Le91+Kat1q95biaVg
TIfcxmqsxXaB99WI/L0dvVb1ab/2KsrRneBWsZRuzcVUH3n+H8VOnVd9MeDM
WAqPxzM6dunkd8+OpSA/xeY7/F4kHquxlAl/LxFLWY2N7Iz3dmMpkzHVkVjK
0fHzBHymQTYP0/En28PN70FY7Ue0AszzTvXsqj93tk8w0e2XjKVY+1jeJ/h/
hp3axTSWsjr/wzJR8buKpRj82SXRs12/B584plPxrurvka1Y8RU4lrK7LmsK
rmO2jsLgYyXZuraqnvyt3X3mVvr4qsxwW3YxgSOAzcUYIPOZz4ilrO7zuspj
j87nYRmYrEmq/C7/7hH7EZW3y59urBjhjFjKlN6uDju+zE4shftehkxv43u8
rhXnKHGuvgG+zup5NL5eGWDHJmvMzoylVHvPrsZSzshx9DRk8oX28f0DMRSe
x6vGPPecl4Jx3HT8YPBjMeyDyuj2qcjQfdt4xHsa7ujOW8VSuvH+qj46az58
WmeWzwnvLx1L6c6EYjorOTwSS/H6aOpX8P0J/8+Mpez6DVWu66oeu1UsJeu3
95iXAhg9kzH2hKeR3PozBdCn/H70q3pvNS9lN5Zy1thn0p6XiqXgfZ5HYx5l
e0R1+6XsYhpL2Rl/mbz5fLxsz+fO3/PzktkeQR7e9wYuEUuZ+qxTfXJ0DuWM
vWcNPi5RnXmx0zfOjqUA/nwz8PtoLn4F35ftm9F3ONZYtXMkb9UcSZXzd6Qv
Gzrdl/WpLpay6lvit9WYXVeHFXquvcanykuJ8sgzXbTTR3diKdW5H0DVjrw3
PPSYwe+ZamXsxgqmfmYWu79kLCXSCVXbVX7WTj/J0OmQaL+ejF9nxFLOpH8S
S4E/4fOgOt3o59GjfEmmrxtbRf5P187eh1rxL24VS+n02GqeXGfzz94vJZvL
zhDNk1Rz1dG7mW2qzvtisIys0MnvVrEU30eqWEq2x2zl86/GUpi/Wb/bjaVU
46tqP17/HNau4Pnpfm27sRT+PeuDmb68ZV6KjV3A819++eXt75lt7vjDe+lE
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
ZXW2uvvL6m8ybf8+Oy+eGdZ21p7W71ZgbX/Nvmp6y74nWRN2ABv89ddfv5FZ
D9N10GvCfcPaEfb4lec4BEEQhMfFTz/99Nd333331yeffPLXL7/8cpXvmY9j
37NxrNlR+9d+fwS89957b8egZwDjn50yv/jii7fv3RP/TJ7QtnbdMmb2xx9/
vJU1+2/Q52MJzwir75dffvmmjia3Vu9ff/31b8+Y3LAcPSsvHjFuuwroJpP1
KYwv1j+u1VetfNYNgrAKi6GwzHqcbaOFy+FefRhBEARBmMDmBnmu+tK2zOYd
/Lwpvv8oY7hLzHkZP3Z8P+OnzcvdY16K4R5iKeBtxCPEsR5F9lZgsoG+NZnz
w/zgM/LiVYD5+p353Wv3VY11haPIZMjk3/T9PeRDCj203lQQBEF4dFwrloKx
K/vrR/z/ewT8uBVgHHuJsYWNoy8JxMc8zDe6h1gK1vRENDxz/IDznaZ9S2t8
nhuIr0W4RF+t1vEoliIcwSVtpiAIgiAIwgquFUu5h7H1pbEzHr2UX4gcmksC
sYoI99DeFQ3Puq6e41grdcOeKcJzwuIo14qlIMaaxZU1DhaOQjIkCIIgCMI9
QLGUc7A7Nr9ELOUa83bIfYj2/zOc0d42JtvNWcJ4LtuPc9peO2ff2F4l9k37
xqT+to8J6nl0f2POSbE9UqYwmrOxL/KtsNdxpytQB4B5mD1rl9/PhWFlsCzY
81a/Tj64/FVZBN1dufcMrAW8dF/l72F9WbYPrsbBz4Nrrc/wOvFWMmTyfe01
KddaB/NMOcIdjJ+32qOF7eGU35WNrMrIvuFtdETfhCZfXvS96p4gCMIz4IxY
Smfnea58cs4Ej30mupe/X9kBzL0bDbu+SWSDMC7nM2LsmnzDxz0wbrX99UBr
9a49g31VPS2IFUTleJqn434Dxma47G8rA+/7NT48nuvG+TifiJ+1/QRX2ovf
7a4slmLfw1w+eAheVXwyPhu9eAfjSh+nQDvzOiSWhZX1OVndz/AVUW/IB+TG
6Pb0RXsp8z6RvH9L1s5cJp7hfZU8j/B7xCum1d7L1nyhXviO8Y33kuK287GJ
6JkpT70MRv3Eyye/iz5h9OIsHh8vyc5visalUV9d6Xvm5/P3Ml3I8sHtUrUl
+MPtBL2100/sHd77sivL6ha1W8Yb+x3yaoAs8v5FOGMLbRw9U9U7Q2SPKpnH
35nMe3D/4LPRIlvFsunrOYnhMU9gZ/h9Bmwz2imjA3XG350tMFhb4V2u+6qv
gnOsYEf83laA2XTQVtkRg9lSPIOYM9er2jMLsuV1NPR9Fsfx71Q2PYLVj9sq
GpejTtZ2sMdM407sl+dQYJtW8ze9TvV02P7IUT/Cu+gLaKOKb9jzjX0Qf+aa
3/sQ94zH2fkGXkaMZi6P73H97B7b9Eh++B3WsZP+LgiC8IjgcRf8halfG42p
vd2N/PjMdzEaUA7bmqhc+xt6GnRmYxvT3Ty+nfhOvq5MD9ukyF7hOxPfiseG
sJtmF/m8C6bT+xRoOy6P6bEyvT8En5BzIVDmBH78E82ZsEygPfx7EZ/h+/N4
A2czrNhgzkuJ3mMfJaqf923596xM8N3HMDgO48dRzCe7eC/i1TEix7AiOlYB
uj0dfBZSF0+Bn+jHDBh74X3wgvstztb2fj5kujqDKMs78nT7capdiGP6slk+
Aev/q/rEwN/z4DFUBOaTj0lF71R9jnkCvYCxN783kUWMj7i8KHfH6zuvl6Ox
H/Qej/GifjUB2tHkB+C+6MuC/eBYAethL7PeJvo+4fU3zmaPxhugFTLPY7mo
rTH+9Lqdn/Xf5324PZ0RL9B2/ruRzvTxKtZz0fivqgvXx8uzl1cv635Mx/F/
bvsoHhTtrRXFdLt4Ko+xmQb+DXwwmfDxao5rMz94bMu6w8ffPMDLzBfAe1E8
l230JBfNw9qDv+PzGFkW4QtZ2Sw3q/vBoUwfh5i0HYN9i0pHe32B9mFA9qJc
Du+nGTLbW51hUOUpg5ccS+E6RG3j+xLbcdYDRr89G90TBEF4JvD4wfsGmT+F
mAfbimi+1OD96yqv0Purhuxd+x7G2Jw/4P1bvM/jym79R0Sbn4/w2D0XhuuH
eSVfZvQ9tp1+zJzN2xnQdr4dEEeborKLzN9IfjJZiObVDbDdqza4krmsvdgv
rHIdMl8mop/L9PejtVK7eeTev6/WzHSIYhuMbJ6UafB1YJmN+l0mszxO8Mj0
Tubr4vlKz8Cv9HtjZ/LJMjFttypmlvndoKnSP9W9br8Ur38MGMesxDG7sSW3
Ddc927PabEiWi5H1qwzoi/551lm+L2Z6nd9h2ji+xrKGHBSWJ19fe4bjZFG9
szxP/O5pRdzJ/8btwLmNLEt+3B6NrYFMJ3B5Xo6yuBD6VNSfqnFjZfv8HEP0
XtRHMnvQxTwjZLaR2x1t42U0GxOzvHl7W+0Dn8Wbwd/ofHXOZYpoW7HRXJ/I
1oK/Ub5i509W35r83qGSM7RHFAfL+mEmj17+zaZHda/qUd0Dj6exFAN8yMyP
rOz1qp0UBEF4BEC3+Vxu9le8TjQbG42FMr+2i6XAR4tstyEbv/I8D8/j8fgn
88E5N3mKyiadEUvx9qXiG9/L8iAiWwaeZTyZYhpLqeIYfr4jGhsYeB5kaoN3
81KqmIgvl3kI2c98u0yGs7H9DnwshcdHq+h81SwWMPXponIzv5rHfB5Ze8Dn
99+J5nY9bRHfeJzKef0+D2xlfjMb11W8yM7HqfRPpQ/4W1Gb7OTBV/Xi+9H4
KWprzMVGyGJpGaoxeiQbeD7Lw8/G4NV4wn/PeFyVXfGJy8/G4PgWYzqOZb6D
nmjcVZU5kU2+x306QnV/YqNX3qvK62xFhq5/QNdUOiors9KrWX5YtP40+g5+
r2K8K7assweTcf70W+BplWu6gsq/QI5U9J2sTX3ucSVX2Istq0eWS1bJzW4s
JcKOLAqCIDwyJraMfU/o5e75bHy1ut7CkM3DcSwlApeLMQ9ypbP80grVfNgZ
sZTq3k4sJSqT7eDq+c3RN3bGZ9WYpbumbdXFUiIfhmmr2tHH4SZnQPu1XP57
Z/gWPpayu8aH65ONTzPZnMpzVG7n82dtMpkftvk8lrGqP0Xw67HwPazPwLUS
E8vG4Vl8yJDtS1HFNqd5KVG5vI5yik6/VHyO+p9fe3JEN6yOm7q+lPWDTma5
XlksJdvrxl+AnxOuYqmdvLOtQ1/l/YQiZOPp1VjKZF/wiY7JvrXy3u4YtcKq
LTP4dS8rZWb9sZLRqM7RuqbomvoVZ8RSVv0tht8DaRWZD2Q6c9K2vF5pVf49
duV0dY2PQbEUQRCEv6PyFdk3g33c8Ws7m4kys/kuQ5TzglhKNp5nW8fjHX9N
19o/QyzF4Pel27Fr1Te62EI1XjrLxnYyl8VSVsZAqHv3rarss+vNfXA3ljKp
T7Zm/IxYSvZ71iZVXA/7iVjMg2Oo1Rqf6htn+oDMQ+aH6Vpevwhgj46Kvmq8
2vm+0bvQsTuxlOydiW7id5Ebw3sNce7hFKtjX26fqi9F9V3RI1kshcdGRvsk
74bbuto3uONFpMN3ebEqm50tZdpW6rUTS6n2za/ygCqsjCehs7C+sNORK+PX
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
uZlOi97j71V6fDXOGLVhpgfAP9i8SeyFxxrMUy7P0/D/t3c3Km7rQBhA3/9t
9xHKUAY+dEeyky574/YcMKXE68iK/izZ49pnqoe7tE737nUedXmsPqTz9DQX
32Um561P7Vzu03mxaxt3ebHWxdrWtfGpL8hrw77+7LK8Hi/L15qPWUemdPR5
rHVnt92p/zWPOb1D7xTfYi3jmZbO76xT2RZNn+U88VRPd2301e9S2ymm0Kr2
XdukLBv5Hdn/T23Wnfq/m5tY8/SdZzRLj/l2pj64f/t8Z9s0N7r2TVfPQK/5
lnOjU3mbxmSly1jOV06/fa5HrOntPN6Ndzot77wHGuBTdBtW7W63tblmP42n
ej34zlh07TPXcUyqfj7XSjLG226tcB1jTeqcej4/x2B35dpnb1Pfmfl257oj
j5drXqXybfqsr0dyq7HftLa4HrNUHvd6bh7jnWvBTEvOy+TaVq7d9TVEr3nt
1vV6v07Xd7y/4zRfcDWf1ul8Nd7yq3+zS9s7MfEm+dt81zF/wjpv0uXjTrnY
la8/Pf/Oy1ffsbLT1xC77zqZ6tu0XljtU17vZH3MLePOTPX4jm5fchw+Ha+P
ubZHvU3nkO3au/Wr/q7azbX9Osk2dW1XW7aJ/c7Tdd8+Tsc66T73FIMi8+c0
r9blMtMw5dG6dtF5sd7nsdNzF1d/sytfu7K3O/deM2/T2s+pHnS/N3029VmZ
Z1P/n9sar2kn+7zdd+W+XTbWebg1v+/0t9nv5rH62nk6r54/3D1X1+VsV8ZO
+v64NZ27dE/7vtOXdVla55pfbd9Wp/Y7TentcrGT5fOOKW7Slas0AHBWfUCN
TbIfvTueuurPpvHC1bFf7TuAv9e7sYiAWc6lPGle9ad1Pl1dJ0/PUH6yvt/m
as2n58sAAIDnOd1vDrzOXMq1vG/jyt31p0/R9/VeyZhSAADAs7gvBb7X+owP
/3WKmZs65tKT3Inz0jEuAACAZ8p4TMCfy7mUJz2b8pOm94FlnI76f8Vhu4pH
/oky3lzHd+vz6rmhOrennRcAAPD7eq/iH+ZWa8Vr3Engvoo/nO9nqnr1yjtY
/iUVIzXfRdtx+ivPKl7v7v3pT1DtaJ1Hn1ufV8c3/vr6+r+TCAAAAB8j3ztS
/z55TgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACA2S/1KlUr
    "], {{0, 192}, {1107, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1107, 192},
  PlotRange->{{0, 1107}, {0, 192}}]], "Input"]], "Text",
 CellChangeTimes->{{3.702032349702738*^9, 3.7020323678695555`*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztfT2vHMmSXUGSIfNZ9C4wsq8zpuhRpryHFdqfXWi1EAjsDrgCBBkC+AuI
cejTbmt+Aj2649AncD1a8w9K8fqoz0ZHRGZl9fe9PAcYoqduVmZkZERkRH5E
/ad/+Je/+x//bpqmf/2P9s/f/f3//i/v3v39//lvf7H/2fzzv/7Pf/rnf/zv
//Wf/9c//tM/vvvP//Dv7eH/tf/+6T9M099+z4IgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgnAPb
7TY//Pr169PT0/WJEQShxJcvX25NgnA9vAzza73YbDarXnn9+vUl+m512kwX
aub/ftmBD9+9e1dOi5eGNWrsOlf3UdtNOnJbvH//fpqmi3bcHCQTkg8fPlyu
iWvCRM76YqqXmQZmPuxg4vTDTkPPruOnyL911sTbhPyM9JQwIt++fQvRunQT
J9bz/ft3WNRpBz43XtlDq3/E5lDRLm2ghLsCFMqExIY+WxKIhMF+9Gd/K7DZ
YbHk8wKU9DgjYPykTvnnUElj+5lofAnYtnFr0v4N3qKWPkmJLADPEdZZ6/ja
4bDy44ya96pB0CjZv2/evOFzzMveziCg419N7+wV1nYTf5hdOGNtp3sLzw4Y
9wt13ISEQnU5T++a4IyTHTnroM1l+E3tuJNew4MFVkU0vr/eYpSAtxP85PuH
MefVq1dHvGjMoQ38/Pnz2QnzwORodF5OqOCpnmX4EDTl2rAcNxg0efbelaMi
XAgm5LA2JoplmAMnBO6H/dvSBXsXK1dwcfHWyxAhumHHGQE62EHHX9IcfS74
ZR8wB2CEcvN1YKNwSlgcxOc4R2fYhGsDcdxiiL21asr2fA5/anmDBBYhSSea
nm60QHHetRFa47PU9owA2btox01sXphBhux5piE89GUwpxtuu+3iFzfWBrAY
uIxsH7B6s7b+OwEoP26YOMqXDpoALHFcdKfpjPNpq7ZxJ5Y1vAyPV+gAY91x
hD5+/BisLl7J6oCIyT95SfuVrV6vej1oJda7XtJ+3FlAXnE5FOCseqGzXuO0
mTpgZcAvMXXmsu/fv7f8/+eFV69eneJZGbushvGxo3sTGuW+QEsfbcoOQcrZ
Z7RVVV3BHTWunreVZ3dy6XTg0NrzcqT7yF4fnOcgvTdcUgC4rJGxGCYb2Y+P
jzDIXJsCvEPiNxQ8Ltyzs4FG7+g962t69edVJZx/808UNAk3wWLENO/cpCxL
cGa8GMNYBasLNbf6zWk8L+XXxyWCpjvHrZyHjv3BbuYpE8eJyCfTjKTFowj2
J/r/l6fxUoBzcmIlxqtxueLqaHbn+sczcmh23hnN6rG47CxVnQurTj8uAhu+
56rtueDlBU1Z7MuzIv0liCuAt6u8qcyBTwZW0ryDEeImXxLrALQqRxjkpx0W
i13Cc/b9Om5BA+9eZ6fpvJu2JhKhKgVNwvVB/7NjBBD1ZMmH2aE14zJR1mU8
//jx43mJvz5+tKAJQ3yTpnk8r7yyyinv+ieUcLQjP+fhkPItXMN5dgIQAFMQ
9v6OAI5tjE/6LcepIwZWeQ7ueAL5OLI9TjQFlwAcqnPN1y2z/+LxUoMmryO4
9HdXO03YA/J+SIhrOrkLchTjr6eV9jacr15F6mAOlr5bdRyg4FigO26krhk0
nVGV4A/8mEGTjiHdFUauf0JmsobSLoWlm1YNp/taN8cPFTSZXb0htf1NBEbo
178Lj2t9+XmHXViasEn/FAHo58G4zjEqBB02FZZ/xcaE9dSilb5fgcl0fKOQ
66uhTvIzi4G9kg0OCkN/ccm3k0zPWIqsL1YmsJft4kTQOPNzSdxBxlHPVZNj
OInnb1xmUfn48SMW8Adb8YdgUVs4JwDudfpuz9EQSvpingYOgb96BkHKbOcr
5VKJz5HYURZmymqJ6FpPz2ctyMYBN+LnfeZGoOX/ozD63irDJEudJAmo582b
N0iQMnKTPczm10eZW9IfpVvl5/ugqQwuTgmaRsQD9Z/XecY58Nkt0B3hTntm
Qk5aijYfCltL6WB5zFDknJNBlaAC3Em0396qeD3yFxbsB7cduRGJv/r5lLfy
rUw54uCelcGGZi7TD5pGQlQfNIVkRFl6sUoAtNxjTHyYVU2dF5eI4WOgXVhg
Tp08HkMj07IhHCYMa6mYvneQDS/qpKGUij48o/LccXMwzOmrdsfkeqMELpVO
LBoaP8oyMi+04O94ltMiTsYyDRfEozWsXsAw+mvnU6/IOQ8APYRyIw+5CvFu
KdsfdpgPzRG7zN61OuglH+Lt/4TlLCpOcHH9RZ6QpIidgjDAmq1aFlu8rjLv
Zc9wJ8c+ETSVgQDH97igCWmC4AWBJ97n3OzzY8w735jCT4ZzXoMcHp1sloFq
tv+c12A8MVd6Qx2AO5LTsIfWkoeNyxYSqiqbRkkQOTlkMUPNRiftvy/DxE04
Z9jviFeHIB72Jwu7QA8Vqs8KaHo452lj6ofY+xXoi0kODiZtBlZNw9USkM1z
AjAaaIXGzdscZjALfPbCCcPuXWIcr+LphTys6DiMkmfj9jBXMGUP9eQQxmrg
bUR4LMElWBU0QRI4m/gR9AfMwqZJHgJwFSluNo0sx9CyzT4obm034HWrB/wk
M/s9ons20uurwSv4KjvPqbbVo6ODJi6O9QMWOo3jNS+Crj6JP2KzKSsjkO8I
m9GAbMPTmNIlDrCCUpptS1Yl7l+HZKdwdSDYtCp+1QVizAxjIWgKfcmkgjZv
ErNs9IOmEdXw9MBsUpfDsQfIJ70yvBhGE++S5pG8zTas3iuDwHgLiQJwC8vL
wqZloNxzODATgxiIJ23eJNLDXGSdz3uJtsqTqNvhZIYXAokM01m5a98JmsCu
jo0a9xWxLMZ5IdzZXDzg57/iQUeOlNsTZiq2MepcF/Vkc4b1kfViR2Y3ec37
AIdtBbbkOsPnSHIyDXYE8yxq8A4zDBrcJz70TTAPFZasaZSoHXQ/wAHvvTy4
JM8h7ZIPxKadg83f43I+Es77JgarvShyshSAy4Pz+qCJrOaTcJnLLxHYD7Or
XCOa9ktAtJwoebRf1Mm8lO9q+bXBXBWlYnzSDxZ13vv2pVbm5GAASaJVLyUt
O5BewgEM5chCEDZTylt4YTsMPerXZjTQMIbaqK2h9enQ4Ry891S6ClkgyUAE
4z6NMyZf+u34QGReaeFDRKAc39zH7e4SWRCqsCaAGvxOmacfC7aBOaXtHVET
jFc49uZHkMzJXkQQubBuVp51D8vjNCZ5wzF7OIu6BqVY7PKV4df0xt/qTKxl
mUWl8+C0CKNKzO5LGeEDB3jYOqIwCIwja2D9azeb2GXS72cQFstnffPZZmxl
+srDUlXeaSqvA+clWXojfFKaI58WIwRE0+EsGUaZ+uW5d8agyS/XlLqcLUCg
J5+OxsrYIg1sLkSmeBhit+wS5M7mJ/mzKfA65n22q2ASBw0LuAcKYQ85vgiT
MaFAMm9yn90vJ2K108d62WEo59mN213q2KhxXzFcsCKRmOj7a00sHNr1Q+Yz
mG3SJu/2cIdxSh7IuNtZ3i8oM06XJyRDMQqP1wLW5u0YLYb3DcqTk+aiePKe
UkLm1nmzbOLAFv+QLWKJe3E1PjeR+xvAcewHTXAyF2G+K38f93Ex7qx5QNP9
xtCgIgDZk8kixDq9rJL/pSe2ql8EByUznGNB4fGBczYdFK3xCI4dZzcZjdJ/
8KSWNdOY+IdZqVtPPIfRwfHdc78b4ukJpzIG54JyHs9iwJJ+e5E+3hFNlEKO
dn1H8KScK8sVeIhrmNBLq9U62JnFia8H7fOt0K7mJsZ9pLw+HApk02c0eP6g
WF7n9z2F/Pd73bqG9rCU7h68uqtjMABPOwyujG33G3AexsnsOawKmvz2ZYa1
+PHjR2uiX8zIOOWTsjjznElae+sBb/3666/+IddguS6NE4B+mTobhL/85S9G
leetlfcj5VXJflvhPI5oiM9RG88f/vHHH63WZzeIYXxpbMFwqyRwb67c2n7Q
NMLn0pOc9+wNi95GkpeHn376yZdBVSZawXQv0kAXNxRGL8LReh754JNffvkl
FMOL/tNgUDE/lBD+eT+zB0s+mM0AxJhkvt8BD0GeVcvdHGNIloQS2RSMoDPQ
HN9QJigj3ZtyvEjVPBY09aOe33//PQst1GckYZcx07Q4LyROyVGZkrcTUp8Z
nfYkN1quTGZ8+/YtN9Gip7QGP//8c2g9j0LphrEJL9IQM/86RvnzIfxozo2g
CVXZ6/5Fmjg2SjKMFX1elQAlnUH3we+ff/7ZqcpIhTnK8DplZd7sYI3av2t3
r4wek73wlj3EnRc+WRU0oXAwOLBOvqGyznHrPY6OAwMn0FM7GDSNJ+LjiNN6
27swrTRZ+F+ULEcQdOZAIDy0d60qGiuMYyizHd5parUy71hqYuP5M+hWdYKm
YM8xE5k98TWPnHTKTUD3wXYPtOtZ0Rr3FuUlM0vBRnOZ7bnFUgWCU5d9BjYx
IpkUY+N5ydLSGhs+ffrkn0Mr3xzCBMPTBu3zBWxMqWIo09JuPO84A6U3e3O0
jFgffq+TyFP2qqBpPrxZ06kZB25DmdYp5VWdmlJYfdxmE14JzrPfnuDDsKaa
V3dp5Fu3G7jEsWmf0QqniQJotfo7TaFODm7rOlv5jb/Td5r8zkiuoSUDXmJ9
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
37rqFVxrlSG6GnwaDSwClMzHuHjhH790LAjCS0I5Bz0+PsomCC8VISvXtpsX
XRCEeZ+PxQKBwa+fXxpIQiLNFU7BYMY55qabJXiCIOzQNxqCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIPyA
eHp6ujUJgiAIgnAbfP78+RLz4Ha7fffu3dmrvRN8+fJls9k8PDy8fv36w4cP
9r9rXzfmWA3TDlaP/UY9hrdv316I7B8QJofGYWNvv5ipgJW00VwsOQ6rEwP9
9evXc9UpXBomBqaAXqPtCTT9R44XjCFQENMm+3FrciJsFoMhvTUhgiAIwplh
E5B5yI+Pj7cm5G+UwG8/lz9gFWJifcFTmI2d9RGeg/22blpnByPE79+/W0nw
x/zz7R72EPUY3rx5c+Ee/EBgZNopA6+Yg3KWdikYBvPozlKncFHQGIa4gCJ0
h8HC1eDl+Q758PHjx7ulTRAEQTgaNvtwar41Lf9/Hf6MQdO8W2DH9PoigyZw
zD+hr2Uj23/XOGMBkZUsV63tCdwzBU1nhAUsxtWRkBZCe8adJiqXgqZnhLyZ
goWgH3ynaXbyvHZj/QrAYtQLPtsgCILww4Kzz60J+RvMoysnwacdjqsTzr+5
GaeRdo9A1wJn4Gj1g8TBWNKqUtB0HYQg98SgCSfxwkMFTc8OUHBtWGRcYoVN
EARBEBZxP0FTC+ZDHu05jJyJeqYo48GR/vJUXn+dFrtR56FVaCPvGGIQjw6a
cDEtPFTQ9OygoKkFBk1ijiAIgnBN3HlMcaLncKL/ec/AYbzQtcWgyUIhFBi5
yHYPl91eNrjr5x+eIrStdxU0PTsoaOpAQdMlYPxc3LxDppqb7PFZu3mhz2ya
xEAQhKvhiKDpagbzuIvPzGkwd4/nWYHNDouV+wozjBtIQGf/IuncIoVfv37d
7PHhw4dc8/fv3+050uKh2ODpfbCrc6KeF9lGMuMZGfl13sJmDgoC8ylSSXj+
ozC6YGWsEnIsNIG/wudHYkAcIyxvaSEPxrRP+pdZhCxbxm1mBfEE8+oWbm8t
ctio/bCDv5rEEfz48aNnO0v6atEjT55P+0DafOCDV4C+3hknfeaTIDY+aEL+
sdID8bQtlilhfGhJNWDDgdFHl8tOIUENfiP1X6iBxTJ5OJ3YUWqIqNHZ+itI
wh20jn2AFoPV0P1cBhpBwvos9WNN4c8qZm0FpsGU4TekDkNQtkKtsX/7jMod
QWGm3LSqPCX2V4w764SKAcEoYRRApBUzcxQkltxAXtBAD+cFMsqKtdYEWFXI
Ruh5gibAyaDIZJf9Xsw/aWqISnxD4B5l6f3796uS9sxulgm2ogVKb5ZhSgjH
jnflyMmyfhh/vDsd3ngFVZ51WJ2DgvAhF/o8f2i1/HlLyBKPiPN0BIwbinn7
yYeCIAh9vHfArGH/8olNE5xKzOC/2YEmEecc7ImZevMi7MerV68eHx/treDN
2v/aQ/sTyhh8mT/++MNasSf2V2sFFtvKwEL2JxqrBAT//PPP9gqfswZQaPj9
99/7rPjll1+MQusIsvXab3qkvjlry2q2YliksmKhO4D91f5k74KNVo8V+/Tp
k68KhH3ewaqyApulDQL01HiCjudX7OFPP/1k5H3fARQizMlRjAeI7BBgr3Pq
WbvpYGTbW/Yv/hey5J+gDB5iyIwSY5d1BONoT+Aavd0BnbIhCxWCz5A0K2a8
wkPfEPhmZcAQpPm1J+SPF56//vWvEFqGihg4+/11B+PwX/7yFyvQ5wkPBUFf
5r0s4eGvv/7qRwfP0ZxVy6750YGA4bkxiq+zJHhoVaFY/7Tkt2/fmLkLWs/u
kHLTIOsmuWEIscOff/4JlwbWA8U851sw4kGwNQH194xiGXtiwwHaIBjQRBYw
ym0s8C4lB+4xpct++D/BvJAAUF4OKHpkVdnz3377bXIhib3LsYAic8gyByCr
6Ag0lNLF/tpD02J0BAVYv/0OJhGSwFEj56f9chZYFx7iRbDLXoeceLsXXF9o
jRWDYYG5MFgNMGLlyBqp1EFYeIC64OvPQm6vgx7ykOIx7Q27F3L718iGetrD
TbVuRmuM10FVOVJgLGZGAzrCMjSteGiVYMiww26Ug12BeyWXAKMWw+HHCN0h
Z6xysxVk/uJ8gaEnByDn1kp/VoUiewXxFU7O/vvKZ2dLrQbPxtB3vOU1t+wO
+OnHjgbTF0NtPNjgZz2rAUEfZljPRszgsGl56AVBEErQCvllKxrMsEaHlR+/
ngNjhc9/YPUvWz8zYmG1nyv8XJXlepH9QGEuBC3mJQBV01E3dHzh4FVyVyVT
HtYb2R36PFgT89Y+3z4Gr/wCV9hKKDsbzDsOaPkaprQNxDN1nYwWKNNPecEu
5Jm0D3Ayr4titvLPy+sG5UCwU77C0keiaPEhnnhWQ358/aQE3PZr/pB23y58
mMUsi6WUgpgQfWBVNndtUx2nDCVBdlg7Bav7K8xkaSjmwz3WSVb7VqyA5+Fg
PkbIcOhaNiMPO/gwigR7EaIfi30QjmzYmLN3wXkkigkGapsSrGWNDvss3vRl
LvmdL3QkcyD01zvGqJDFvAiBsKBcVBn/kBT6h7T/vvubtMNeqhuIWfQ26RJb
efKz1PQ86CQmdJB8IKtJYZD83JfSSuSrmqjQlzGjV5Zho8h953fJPc2I3Pu8
KoMC6pHnTDnEGeiXlzdwfnGXil0Lyov9d19V4BKGhlEViA+VsEfhrTD0ISLz
Lfpi5USPh2EqLK0WOPkic+QKgnAJwIyUs1IOmhZd3GzBzHAFRzF7U34VKARl
08D5um316c/xoAlmM7cSpipMmjmy4PxC1xfHFcra/NGs3Gh/Liu76V9pfbRx
MXtDjuBarQP9TasAyFJumm5hbqJsN/QrB7BlZMHR4XN0Ngvt5vDwW9lTDsHW
gZLWP43GUQinkqZ0RyyfKYI3NSLhJa/gfvSDlxafS1ZQhcO+c6hzJB9jKXtB
O1pxdxZsJsPPDaHOfNUOlYSHpbaGkHDRnZv3wk8OoK28NpI7UvrP2VUul3Hm
6uB0J2gK7Mp9KXuHCkfyvZRyhYeepUFPgVKpy5Llw8wx9CXLJMJtsiJLRbkh
knvhyc6qNHdRDnq5mtGStwB03xNc3mYtkQOueX/MmITl5Y4QNIEP5eHnvLR1
XNDUiaRClFrGR4OcFARBAFq2MT8M1q+cNPOWik1G2IciOJH116zm4Ru7JwZN
wc6H1llt6bj6tsAKzEo8vw1wvyO47q0bNyX8nlEOcOjH5o6Qva2gbISM44Km
zpSUB31V0IRR68c+QMd1x1mO7Au1yObmDl/BYf5w0r5EuXhLXQhr5mF8zxI0
9T2lHAf1WREKk/keFJgOZ0aUNI91oI0s7ZwyLf2o2a1yE/5wXauhFiXheRjf
ksNztWtW+s8h8Ck3gID8vNybQCuLbmRHMU8MmnIAUgr54rtzQ/0H+zInhk9t
eHa1BpQjlS+RdVAOetnKuKsfrke1jGT5IprwNXRa9F+E5xw0SOQpQVO54V4q
+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
CIIgCIIgCIIgCIIgCIIgCIIgnAv/Dy9TVj0=
    "], {{0, 125}, {1127, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1127, 125},
  PlotRange->{{0, 1127}, {0, 125}}]], "Input"]], "Text",
 CellChangeTimes->{3.7020325459306974`*^9}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAADw/wD3ISFP
    "], {{0, 161}, {1208, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1208, 161},
  PlotRange->{{0, 1208}, {0, 161}}]], "Input"]], "Text",
 CellChangeTimes->{3.702032645732791*^9}],

Cell["Let us first solve for the constants", "Text",
 CellChangeTimes->{{3.702033689076975*^9, 3.7020337016136274`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", "9.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "d_", "]"}], ":=", 
   RowBox[{"\[Gamma]", " ", 
    RowBox[{"d", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"c", "[", "0.24", "]"}]}], "Input",
 CellChangeTimes->{{3.702033725042473*^9, 3.7020337672781787`*^9}, {
  3.7020338261088824`*^9, 3.702033829252779*^9}}],

Cell[BoxData["0.0144`"], "Output",
 CellChangeTimes->{3.702033829705679*^9}]
}, Open  ]],

Cell[TextData[{
 "Here in this problem ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", "=", "0"}], ",", 
    RowBox[{"6", "Kg", " "}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and therefore the above equations become"
}], "Text",
 CellChangeTimes->{{3.7020333666832104`*^9, 3.702033402031561*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v0", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vx0", "=", 
   RowBox[{"N", "[", 
    RowBox[{"v0", "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"Pi", "/", "4"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vy0", "=", 
   RowBox[{"N", "[", 
    RowBox[{"v0", "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", "/", "4"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.702033867330825*^9, 3.7020339672099977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sol", "=", 
  RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"0.6", "*", 
         RowBox[{
          RowBox[{"vx", "'"}], "[", "t", "]"}]}], "+", 
        RowBox[{"0.0144", "*", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"vx", "[", "t", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"vy", "[", "t", "]"}], "2"]}]], 
         RowBox[{"vx", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"0.6", "*", 
         RowBox[{
          RowBox[{"vy", "'"}], "[", "t", "]"}]}], "+", "0.6", "+", 
        RowBox[{"0.0144", "*", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"vx", "[", "t", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"vy", "[", "t", "]"}], "2"]}]], 
         RowBox[{"vy", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vx", "[", "0", "]"}], "\[Equal]", "vx0"}], ",", 
      RowBox[{
       RowBox[{"vy", "[", "0", "]"}], "\[Equal]", "vy0"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"vx", ",", "vy"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "25"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.702033409634585*^9, 3.702033545523404*^9}, {
  3.702033597504826*^9, 3.702033643018154*^9}, {3.7020337989070845`*^9, 
  3.702033807374126*^9}, {3.702033844681368*^9, 3.7020338531118107`*^9}, {
  3.702034001833682*^9, 3.70203404701668*^9}, {3.7020341000930977`*^9, 
  3.7020341015503016`*^9}, {3.702034190656267*^9, 3.702034191191145*^9}, {
  3.7020342295383554`*^9, 3.7020342295839615`*^9}, {3.702034266239497*^9, 
  3.7020342692779408`*^9}, {3.7020344829417486`*^9, 3.7020344829857807`*^9}, {
  3.702035047395612*^9, 3.7020350606104393`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"vx", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD4SJ81JlDYlQEXRMWw0
Fdo/yw38PtaFIkAFZS60Bi7rP8pPoJAjVCBAaslGZ8ww9D8RBjwP7nodQMqC
eNpvqfo/AdhF1gD6GkAVebNxPtcAQNsvRy+EwxhAIB09Xc4dBEDDNtiLJA4X
QCkcpROTqgdAmQi9HViAFUBwLA79xCYLQFg8sADnNRRAEKmJTQBnDkCs0Kc9
BSwTQFjAcTS49hBAVnRSDXgwEkBV4qf19JsSQArPW/dIYRFA8YxeUOg4FED6
f9T44qoQQAxlhBD2+BVAFg95wsTuD0BVczOECJsXQPvVUgDWug5AHq9RXTVg
GUAXF2ouhIMNQIVz8M8YHRtAhQcEl81iDEAZbhj2ALwcQPKNqH96YAtALZav
gQN+HkADZFq+ulAKQDj6Z2AFESBAKNJ41aRYCUAZwK8ylvQgQC5nJQgXUAhA
Scq3UQLUIUDYDJBCmk8HQI9vhMpwpCJA5MiO7M1iBkCVqwh2bIYjQKULmvPA
ZAVAsoJRe2pZJEDDUwcEWnoEQB6eWs1DKCVA8pQhf5qXA0BKUBtSqggmQOle
UZagpQJAjZ2gMBPaJkCQa2yQL8gBQI+B3UEJvSdAa4IfNqDdAEDhqdqf2pso
QD1gfGn++v8/SW2cV65rKUAJF/zA5mT+P3HHFUIPTSpAanbd3Y+6/D+wvFOG
ch8rQC66z2x7Ovs/PvZRF7HtK0DTLhOugc/5P4zGB9t8zSxAvN/eaTRV+D/w
MYL4Sp4tQNEouBETA/c/FDS0SKaALkBzXS2Cy6T1P0/RqvIDVC9ADQuYMfZs
9D9t2bB0nhEwQIS3eB5mSfM/khVoiQGCMEBprUjFvBzyP0KfAcvl6jBAFkb+
k3US8T9S9PalkFwxQFRwBa4aAfA/imtMJynMMUDYxNXpQgfuP00whNVCNDJA
gRXA8wtI7D9wwBcdI6UyQPyuOrkRfuo/H56NkYQOM0C6QxARxuroP/WdY6zT
dTNAVqzqki115z8raZVg6eUzQBbMlEgg9+U/7IGpQYBONEBcTXO1cqfkPw1m
GbzdvzRAs4gkRCtR4z9WbOncKC81QEanSufWFeI/KsCbKvWWNUD6KbBBPgHh
P17fqRGIBzZAkHCw+qLO3z8dTJolnHA2QN6+4ENl4N0/PITm0nbiNkCQvcNR
1unbP4PekiY/UjdAN7977Nob2j9VhiGniLo3QJJ8b8tJh9g/h/kLwZgrOEBz
KJyq0evWP0W62AcqlThApixzfKCD1T8+GeT4//84QMH8pLxNLdQ/jtCjUA==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 25.}, {0., 10.606600099843067`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD4SJ81JlDYlQEXRMWw0
Fdo/yw38PtaFIkAFZS60Bi7rP8pPoJAjVCBAaslGZ8ww9D8RBjwP7nodQMqC
eNpvqfo/AdhF1gD6GkAVebNxPtcAQNsvRy+EwxhAIB09Xc4dBEDDNtiLJA4X
QCkcpROTqgdAmQi9HViAFUBwLA79xCYLQFg8sADnNRRAEKmJTQBnDkCs0Kc9
BSwTQFjAcTS49hBAVnRSDXgwEkBV4qf19JsSQArPW/dIYRFA8YxeUOg4FED6
f9T44qoQQAxlhBD2+BVAFg95wsTuD0BVczOECJsXQPvVUgDWug5AHq9RXTVg
GUAXF2ouhIMNQIVz8M8YHRtAhQcEl81iDEAZbhj2ALwcQPKNqH96YAtALZav
gQN+HkADZFq+ulAKQDj6Z2AFESBAKNJ41aRYCUAZwK8ylvQgQC5nJQgXUAhA
Scq3UQLUIUDYDJBCmk8HQI9vhMpwpCJA5MiO7M1iBkCVqwh2bIYjQKULmvPA
ZAVAsoJRe2pZJEDDUwcEWnoEQB6eWs1DKCVA8pQhf5qXA0BKUBtSqggmQOle
UZagpQJAjZ2gMBPaJkCQa2yQL8gBQI+B3UEJvSdAa4IfNqDdAEDhqdqf2pso
QD1gfGn++v8/SW2cV65rKUAJF/zA5mT+P3HHFUIPTSpAanbd3Y+6/D+wvFOG
ch8rQC66z2x7Ovs/PvZRF7HtK0DTLhOugc/5P4zGB9t8zSxAvN/eaTRV+D/w
MYL4Sp4tQNEouBETA/c/FDS0SKaALkBzXS2Cy6T1P0/RqvIDVC9ADQuYMfZs
9D9t2bB0nhEwQIS3eB5mSfM/khVoiQGCMEBprUjFvBzyP0KfAcvl6jBAFkb+
k3US8T9S9PalkFwxQFRwBa4aAfA/imtMJynMMUDYxNXpQgfuP00whNVCNDJA
gRXA8wtI7D9wwBcdI6UyQPyuOrkRfuo/H56NkYQOM0C6QxARxuroP/WdY6zT
dTNAVqzqki115z8raZVg6eUzQBbMlEgg9+U/7IGpQYBONEBcTXO1cqfkPw1m
GbzdvzRAs4gkRCtR4z9WbOncKC81QEanSufWFeI/KsCbKvWWNUD6KbBBPgHh
P17fqRGIBzZAkHCw+qLO3z8dTJolnHA2QN6+4ENl4N0/PITm0nbiNkCQvcNR
1unbP4PekiY/UjdAN7977Nob2j9VhiGniLo3QJJ8b8tJh9g/h/kLwZgrOEBz
KJyq0evWP0W62AcqlThApixzfKCD1T8+GeT4//84QMH8pLxNLdQ/jtCjUA==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 25.}, {0., 10.606600099843067`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 25.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"vy", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD7XWZU7lDYlQEXRMWw0
Fdo/ENpbX1zCIUAFZS60Bi7rP5EWryTkpR1AaslGZ8ww9D/YRLkkgTEZQMqC
eNpvqfo/4A60DB+BFUAVebNxPtcAQPkaZN6bDhJAIB09Xc4dBEAEMiG9lXUO
QCkcpROTqgdAMnIuqrX5CEBwLA79xCYLQKXfeGtOGARAEKmJTQBnDkBpZfcF
+cn/P1jAcTS49hBA5uBfdgRK9z9V4qf19JsSQLnp8RlEou8/8YxeUOg4FEBP
Lj6dM7LhPwxlhBD2+BVAqIIrpdjzuT9VczOECJsXQKZgRHC2ZNO/Hq9RXTVg
GUCWexWRmDHnv4Vz8M8YHRtA5ik3b7748b8Zbhj2ALwcQCEIBHwis/e/LZav
gQN+HkCek5Kruaz9vzj6Z2AFESBAgpMcFu2CAcAZwK8ylvQgQG4KjTOkRwTA
Scq3UQLUIUDkDOVtwNwGwI9vhMpwpCJAhIX7038lCcCVqwh2bIYjQFLRIn7A
ewvAsoJRe2pZJEDgR7zGTogNwB6eWs1DKCVA1GcE75RqD8BKUBtSqggmQOv0
x24dqRDAjZ2gMBPaJkDQ4yg4P3wRwI+B3UEJvSdAyVv43KtPEsDhqdqf2pso
QGPP3YBADhPASW2cV65rKUCJD3lxgLETwHHHFUIPTSpAtaxh04JTFMCwvFOG
ch8rQMYWInFs3RTAPvZRF7HtK0CfyfQN51gVwIzGB9t8zSxAR/onOqPSFcDw
MYL4Sp4tQOUyk2+IORbAFDS0SKaALkBdpOBBU54WwE/RqvIDVC9AB/yD4CXz
FsBt2bB0nhEwQGADwNVQPhfAkhVoiQGCMEBNAphRq4cXwEKfAcvl6jBAoJQ0
lSDFF8BS9PalkFwxQGDDzlrOABjAimtMJynMMUDGLt+jDzUYwE0whNVCNDJA
scvCfrJgGMBwwBcdI6UyQDWx4Jn9ihjAH56NkYQOM0C7TCS2Oa4YwPWdY6zT
dTNAExHhXy7NGMAraZVg6eUzQE6wgs4n6xjA7IGpQYBONEDMfQHQFAQZwA1m
GbzdvzRA0DSUnyEcGcBWbOncKC81QLolVb8OMRnAKsCbKvWWNUBxnBbeb0IZ
wF7fqRGIBzZAC1nLBzRTGcAdTJolnHA2QNCVUmsbYRnAPITm0nbiNkBOqGSl
em4ZwIPekiY/UjdAmhldXRV6GcBVhiGniLo3QBoiuEazgxnAh/kLwZgrOEAS
MHzo84wZwEW62AcqlThAUV72fZyUGcA+GeT4//84QMnmUCWBmxnACiWqbQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 25.}, {-6.401859839499317, 
                    10.606599676114383`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD7XWZU7lDYlQEXRMWw0
Fdo/ENpbX1zCIUAFZS60Bi7rP5EWryTkpR1AaslGZ8ww9D/YRLkkgTEZQMqC
eNpvqfo/4A60DB+BFUAVebNxPtcAQPkaZN6bDhJAIB09Xc4dBEAEMiG9lXUO
QCkcpROTqgdAMnIuqrX5CEBwLA79xCYLQKXfeGtOGARAEKmJTQBnDkBpZfcF
+cn/P1jAcTS49hBA5uBfdgRK9z9V4qf19JsSQLnp8RlEou8/8YxeUOg4FEBP
Lj6dM7LhPwxlhBD2+BVAqIIrpdjzuT9VczOECJsXQKZgRHC2ZNO/Hq9RXTVg
GUCWexWRmDHnv4Vz8M8YHRtA5ik3b7748b8Zbhj2ALwcQCEIBHwis/e/LZav
gQN+HkCek5Kruaz9vzj6Z2AFESBAgpMcFu2CAcAZwK8ylvQgQG4KjTOkRwTA
Scq3UQLUIUDkDOVtwNwGwI9vhMpwpCJAhIX7038lCcCVqwh2bIYjQFLRIn7A
ewvAsoJRe2pZJEDgR7zGTogNwB6eWs1DKCVA1GcE75RqD8BKUBtSqggmQOv0
x24dqRDAjZ2gMBPaJkDQ4yg4P3wRwI+B3UEJvSdAyVv43KtPEsDhqdqf2pso
QGPP3YBADhPASW2cV65rKUCJD3lxgLETwHHHFUIPTSpAtaxh04JTFMCwvFOG
ch8rQMYWInFs3RTAPvZRF7HtK0CfyfQN51gVwIzGB9t8zSxAR/onOqPSFcDw
MYL4Sp4tQOUyk2+IORbAFDS0SKaALkBdpOBBU54WwE/RqvIDVC9AB/yD4CXz
FsBt2bB0nhEwQGADwNVQPhfAkhVoiQGCMEBNAphRq4cXwEKfAcvl6jBAoJQ0
lSDFF8BS9PalkFwxQGDDzlrOABjAimtMJynMMUDGLt+jDzUYwE0whNVCNDJA
scvCfrJgGMBwwBcdI6UyQDWx4Jn9ihjAH56NkYQOM0C7TCS2Oa4YwPWdY6zT
dTNAExHhXy7NGMAraZVg6eUzQE6wgs4n6xjA7IGpQYBONEDMfQHQFAQZwA1m
GbzdvzRA0DSUnyEcGcBWbOncKC81QLolVb8OMRnAKsCbKvWWNUBxnBbeb0IZ
wF7fqRGIBzZAC1nLBzRTGcAdTJolnHA2QNCVUmsbYRnAPITm0nbiNkBOqGSl
em4ZwIPekiY/UjdAmhldXRV6GcBVhiGniLo3QBoiuEazgxnAh/kLwZgrOEAS
MHzo84wZwEW62AcqlThAUV72fZyUGcA+GeT4//84QMnmUCWBmxnACiWqbQ==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 25.}, {-6.401859839499317, 
                    10.606599676114383`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 25.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.702034047938886*^9, 3.702034103876614*^9, 
  3.7020341919389424`*^9, 3.7020342961908965`*^9, 3.7020344838990355`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vx", "[", "t", "]"}], ",", 
       RowBox[{"vy", "[", "t", "]"}]}], "}"}], "/.", "Sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "25"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Vx\>\"", ",", "\"\<Vy\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702034087359315*^9, 3.7020340916751337`*^9}, {
  3.7020341553467436`*^9, 3.7020342314006157`*^9}, {3.7020342992532787`*^9, 
  3.7020343073537045`*^9}, {3.702034344637802*^9, 3.702034352690755*^9}, {
  3.70203441678618*^9, 3.702034479565756*^9}, {3.7020358378877177`*^9, 
  3.7020358399846706`*^9}, {3.7020358735237036`*^9, 3.7020358827900925`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/8hi
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
HN2rdPVtkXxhgQR7PyeLOKX/BbhU3YU=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Vx\"", "\"Vy\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.702034175944847*^9, 3.702034231976511*^9}, 
   3.7020343077346926`*^9, {3.7020344265343723`*^9, 3.7020344857581835`*^9}, 
   3.7020350771523814`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{851, 877},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 194, 2, 101, "Title"],
Cell[777, 26, 102, 1, 56, "Subtitle"],
Cell[CellGroupData[{
Cell[904, 31, 19, 0, 70, "Section"],
Cell[CellGroupData[{
Cell[948, 35, 204, 3, 49, "Subsection"],
Cell[1155, 40, 48037, 791, 127, "Text"],
Cell[49195, 833, 27557, 456, 86, "Text"],
Cell[76755, 1291, 10772, 181, 100, "Text"],
Cell[87530, 1474, 120, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[87675, 1479, 481, 12, 88, "Input"],
Cell[88159, 1493, 76, 1, 30, "Output"]
}, Open  ]],
Cell[88250, 1497, 324, 10, 30, "Text"],
Cell[88577, 1509, 514, 16, 69, "Input"],
Cell[CellGroupData[{
Cell[89116, 1529, 2009, 51, 178, "Input"],
Cell[91128, 1582, 27864, 541, 141, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119029, 2128, 865, 19, 30, "Input"],
Cell[119897, 2149, 16531, 322, 236, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

